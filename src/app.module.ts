import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';import { AppController } from './app.controller';import { AppService } from './app.service';import { UserModule } from './user/user.module';import { ConfigModule } from '@nestjs/config';// 使用Joi校验import * as Joi from 'joi';// 使用typeormimport { TypeOrmModule } from '@nestjs/typeorm';import { connectionParams } from '../ormconfig';// 使用pinoimport { LoggerModule } from 'nestjs-pino';import * as path from 'node:path';import { pinoHttp } from 'pino-http';@Module({  imports: [    UserModule,    // 配置使用nest/config    ConfigModule.forRoot({      isGlobal: true,      envFilePath: ['.env.development.local', '.env.development'],      validationSchema: Joi.object({        // NODE_ENV: Joi.string().valid('development', 'production').required().default('development'),        DB_TYPE: Joi.string(),        DB_HOST: Joi.string().required(),        DB_PORT: Joi.number().required().default(3090),        DB_USER: Joi.string().required(),        DB_PASSWORD: Joi.string().required(),        DB_NAME: Joi.string().required(),      }),    }),    // 使用typeorm    TypeOrmModule.forRoot(connectionParams),    // 使用pino    LoggerModule.forRoot(      {        pinoHttp: {          transport: {            targets: [              {                level: 'info',                target: 'pino-pretty',                options: {                  colorize: true,                  translateTime: 'SYS:yyyy-mm-dd HH:MM:ss',                  ignore: 'pid,hostname',                  frequency: 'daily',                  size: '0.1k',                  mkdir: true,                  file: path.join('logs', 'log.txt'),                },              },              {                level: 'error',                target: 'pino-pretty',                options: {                  colorize: true,                  translateTime: 'SYS:yyyy-mm-dd HH:MM:ss',                  ignore: 'pid,hostname',                },              },            ],          },        },      },    ),  ],  controllers: [AppController],  providers: [AppService],})export class AppModule implements NestModule {  configure(consumer: MiddlewareConsumer) {    // 使用 pino-http 作为全局中间件    consumer.apply(pinoHttp()).forRoutes('*');  }}